{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Registration/Registration.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","fontSize","onClick","className","class","margin","Logo","options","perspective","height","width","href","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","alt","src","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","React","Component","Registration","onNameChange","particlesOptions","particles","number","density","enable","value_area","initalState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8d71e073.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navigation.css\"\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\n\r\nfunction Navigation({ onRouteChange, isSignedIn }) {\r\n    if (isSignedIn) {\r\n      return (\r\n      <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n      <DirectionsRunIcon fontSize=\"large\" onClick={() => onRouteChange('signout')} className=\"f3 link dim black underline pa3 pointer\"/>\r\n      <p class=\"signout\">Sign Out</p>\r\n    </nav>\r\n    );\r\n    } else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end', margin: '10px'}}>\r\n     <PersonIcon fontSize=\"large\" onClick={() => onRouteChange('signin')} className=\"f3 link dim black underline pa3 pointer\" />\r\n     <p class=\"signin\">Sign In</p>\r\n     <HowToRegIcon fontSize=\"large\" onClick={() => onRouteChange('register')} className=\"f3 link dim black underline pa3 pointer\"/>\r\n     <p class=\"register\">Register</p>  \r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./Logo.css\";\r\nimport Tilt from \"react-tilt\";\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"ma4 mt0\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-2\"\r\n        options={{ perspective: 300 }}\r\n        style={{ height: 150, width: 150 }}\r\n        \r\n      >\r\n        <div className=\"Tilt-inner\"> ðŸ¤¯ </div>\r\n        <div className=\"Logo__Name\">\r\n        <a href=\"https://github.com/ItzJammyZz\">  <h1>Jammy</h1> </a>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n\r\n{/* <a href=\"https://github.com/ItzJammyZz\">Jammy</a> */}","import React from 'react'\r\nimport \"./ImageLinkFor.css\";\r\n\r\nconst ImageLinkForm =({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div className=\"ImageLinkFor\">\r\n        <p>\r\n        {'This Magic web app will detect faces in your pictures. Give it a whirl!'}        \r\n        </p>    \r\n        <div className=\"center\">\r\n            <div className=\"form center pa4 br3 shadow-5\">\r\n            <input className=\"f4 pa2 w-70 center\" type=\"text\" onChange={onInputChange}/>\r\n            <button \r\n            className=\"buttonize w-30 grow f4 link ph3 pv2 dib white\"\r\n            onClick={onButtonSubmit}\r\n            >Detect</button>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm\r\n","import React from \"react\";\r\nimport \"./Rank.css\";\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"fontzone white f3\">\r\n      {`${name}, your current entry count is...`}\r\n      </div>\r\n      <div className=\"fontzone white f1\">\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from 'react'\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imageUrl, box}) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n               <img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>  \r\n            <div className='bounding-box' \r\n            style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport \"./Signin.css\";\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('http://localhost:3000/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user => {\r\n      if (user.id) {\r\n        this.props.loadUser(user)\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\nreturn (\r\n  <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n  <main className=\"pa4 black-80\">\r\n  <div className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f2 fw6 ph0 mh0 center\">Sign In</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input \r\n        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"email\" \r\n        name=\"email-address\"  \r\n        id=\"email-address\" \r\n        onChange={this.onEmailChange}\r\n        />\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input \r\n        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"password\" \r\n        name=\"password\"  \r\n        id=\"password\" \r\n        onChange={this.onPasswordChange}\r\n        />\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input\r\n      onClick={this.onSubmitSignIn} \r\n      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n      type=\"submit\" \r\n      value=\"Sign in\" \r\n      />\r\n    </div>\r\n    <div className=\"lh-copy mt3\">\r\n      <p onClick={() => onRouteChange('registration')} className=\"f6 link dim black db pointer\">Register</p>\r\n    </div>\r\n  </div>\r\n</main>\r\n</article>\r\n      );\r\n    }\r\n}\r\n\r\n\r\nexport default Signin\r\n","import React from 'react'\r\nimport './Registration.css'\r\n\r\nclass Registration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email:'',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('http://localhost:3000/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user => {\r\n      if(user.id) {\r\n        this.props.loadUser(user)\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n  <div className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f2 fw6 ph0 mh0 center\">Register</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n        <input \r\n        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"text\" \r\n        name=\"name\"  \r\n        id=\"name\" \r\n        onChange={this.onNameChange}\r\n        />\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input \r\n        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"email\" \r\n        name=\"email-address\"  \r\n        id=\"email-address\" \r\n        onChange={this.onEmailChange}\r\n        />\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input \r\n        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"password\" \r\n        name=\"password\"  \r\n        id=\"password\" \r\n        onChange={this.onPasswordChange}\r\n        />\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input\r\n      onClick={this.onSubmitSignIn} \r\n      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n      type=\"submit\" \r\n      value=\"Register\" \r\n      />\r\n    </div>\r\n  </div>\r\n</main>\r\n</article>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration\r\n","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Signin from './components/Signin/Signin'\nimport Registration from './components/Registration/Registration';\n\nconst particlesOptions = {\n  particles: {\n   number: {\n     value: 130,\n     density: {\n       enable: true,\n       value_area: 900\n     }\n   }\n  }\n}\n\nconst initalState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initalState\n}\n\nloadUser = (data) => {\n  this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n\n  }})\n}\n\n\n/*\ncomponentDidMount() {\n  fetch('http://localhost:3000/')\n    .then(response => response.json())\n    .then(console.log)\n}\nThis won't be needed anymore but it's used to test backend to frontedn\n*/\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange =(event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('http://localhost:3000/imageurl', {\n             method: 'post',\n             headers: {'Content-Type': 'application/json'},\n             body: JSON.stringify({\n               input: this.state.input\n             })\n           })\n           .then(response => response.json())\n       .then(response => {\n         if (response) {\n           fetch('http://localhost:3000/image', {\n             method: 'put',\n             headers: {'Content-Type': 'application/json'},\n             body: JSON.stringify({\n               id: this.state.user.id\n             })\n           })\n           .then(response => response.json())\n           .then(count => {\n             this.setState(Object.assign(this.state.user, {entries: count}))\n           })\n              .catch(console.log)\n\n       }\n        \n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n  }\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState(initalState)\n  } else if (route === 'home') {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\n\nrender() {\n  const { isSignedIn, imageUrl, route, box } = this.state;\n  return (\n    <div className=\"App\">\n       <Particles className='particles'\n        params={particlesOptions}\n      />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n      { route === 'home'\n        ? <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n          \n        : (\n           route === 'signin'\n           ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n           : <Registration loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n      }\n    </div>\n    \n    \n  );\n}\n}\n\n\nexport default App;\n\n\n\n\n//   render() {\n//    const  { isSignedIn, imageUrl, route, box } = this.state;\n//     return (\n//     <div className=\"App\">\n//       <Particles className=\"particles\"\n//               params={particlesOptions}\n//             />\n\n//      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n//      { route === 'home' \n//      ? <div> \n//      <Logo />\n//      <Rank />\n//      name={this.state.user.name}\n//      entries={this.state.user.entries}\n//      <ImageLinkForm \n//      onInputChange={this.onInputChange} \n//      onButtonSubmit={this.onButtonSubmit}\n//      />\n//      <FaceRecognition box={box} imageUrl={imageUrl} />\n//     </div>\n//      : (\n//       route === 'signin' \n//        ?  <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n//        :  <Registration loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n//        )\n//      }\n//      </div>\n//   );\n// }\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}